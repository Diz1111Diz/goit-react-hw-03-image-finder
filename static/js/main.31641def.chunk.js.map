{"version":3,"sources":["Components/Searchbar/Searchbar.jsx","Components/ImageGalleryItem/ImageGalleryItem.jsx","Components/ImageGallery/ImageGallery.jsx","Components/Modal/Modal.jsx","Components/Button/Button.jsx","Components/Loader/Loader.jsx","Container/ImageFinderContainer/ImageFinderContainer.js","App.js","index.js"],"names":["Searchbar","state","name","inputChange","e","setState","target","value","formSubmit","preventDefault","props","onSubmit","this","className","type","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","image","openModal","webformatURL","largeImageURL","tags","src","alt","onClick","ImageGallery","images","map","key","id","Modal","largeImageUrl","closeModal","useEffect","window","addEventListener","handelPressKey","removeEventListener","code","tagName","Button","loadMore","Loader","color","height","width","timeout","style","marginTop","CLIENT_KEY","process","ImageFinderContainer","searchName","currentPage","loader","error","isOpen","getImages","a","page","axios","get","response","data","hits","console","log","newPage","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","length","App","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.31641def.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\n// import { toast } from \"react-toastify\";\n// import \"react-toastify/dist/ReactToastify.css\";\n// toast.configure();\n\nclass Searchbar extends Component {\n  static propTypes = {\n    onSubmit: PropTypes.func,\n    name: PropTypes.string,\n    inputChange: PropTypes.func,\n  };\n\n  state = { name: \"\" };\n\n  inputChange = (e) => {\n    this.setState({ name: e.target.value });\n  };\n\n  formSubmit = (e) => {\n    const { name } = this.state;\n    e.preventDefault();\n    if (!name) {\n      return;\n    }\n    this.props.onSubmit(this.state.name);\n\n    this.setState({ name: \"\" });\n  };\n\n  render() {\n    const { name } = this.state;\n    return (\n      <>\n        <header className=\"Searchbar\">\n          <form className=\"SearchForm\" onSubmit={this.formSubmit}>\n            <button type=\"submit\" className=\"SearchForm-button\">\n              <span className=\"SearchForm-button-label\">Search</span>\n            </button>\n\n            <input\n              className=\"SearchForm-input\"\n              type=\"text\"\n              autoComplete=\"off\"\n              autoFocus\n              placeholder=\"Search images and photos\"\n              value={name}\n              onChange={this.inputChange}\n            />\n          </form>\n        </header>\n      </>\n    );\n  }\n}\n\nexport default Searchbar;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst ImageGalleryItem = ({ image, openModal }) => {\n  const { webformatURL, largeImageURL, tags } = image;\n  return (\n    <>\n      <li className=\"ImageGalleryItem\">\n        <img\n          className=\"ImageGalleryItem-image\"\n          src={webformatURL}\n          alt={tags}\n          onClick={() => openModal(largeImageURL, tags)}\n        />\n      </li>\n    </>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n  largeImageURL: PropTypes.string,\n  openModal: PropTypes.func,\n};\n\nexport default ImageGalleryItem;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\n\nconst ImageGallery = ({ images, openModal }) => {\n  return (\n    <>\n      <ul className=\"ImageGallery\">\n        {images.map((image) => (\n          <ImageGalleryItem\n            key={image.id}\n            image={image}\n            openModal={openModal}\n          />\n        ))}\n      </ul>\n    </>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n  openModal: PropTypes.func.isRequired,\n};\n\nexport default ImageGallery;\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useEffect } from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Modal = ({ largeImageUrl, tags, closeModal }) => {\n  useEffect(() => {\n    window.addEventListener(\"keydown\", handelPressKey);\n    return () => {\n      window.removeEventListener(\"keydown\", handelPressKey);\n    };\n  }, []);\n\n  const handelPressKey = (e) => {\n    if (e.code !== \"Escape\") {\n      return;\n    }\n    closeModal();\n  };\n\n  const handelDropClick = (e) => {\n    if (e.target.tagName === \"IMG\") {\n      return;\n    }\n    closeModal();\n  };\n\n  return (\n    <>\n      <div className=\"Overlay\" onClick={handelDropClick}>\n        <div className=\"Modal\">\n          <img src={largeImageUrl} alt={tags} />\n        </div>\n      </div>\n    </>\n  );\n};\n\nModal.propTypes = {\n  largeImageUrl: PropTypes.node.isRequired,\n  closeModal: PropTypes.func,\n};\n\nexport default Modal;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nconst Button = ({ loadMore }) => {\n  return (\n    <>\n      <button className=\"Button\" onClick={loadMore}>\n        Load more\n      </button>\n    </>\n  );\n};\n\nButton.propTypes = {\n  loadMore: PropTypes.func.isRequired,\n};\n\nexport default Button;\n","import React from \"react\";\nimport Spinner from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nexport default function Loader() {\n  return (\n    <Spinner\n      type=\"Oval\"\n      color=\"#00BFFF\"\n      height={200}\n      width={200}\n      timeout={3000}\n      style={{ marginTop: \"10%\" }}\n    />\n  );\n}\n","import React, { Component } from \"react\";\n\nimport axios from \"axios\";\nimport Searchbar from \"../../Components/Searchbar/Searchbar\";\nimport ImageGallery from \"../../Components/ImageGallery/ImageGallery\";\nimport Modal from \"../../Components/Modal/Modal\";\nimport Button from \"../../Components/Button/Button\";\nimport Loader from \"../../Components/Loader/Loader\";\n\nconst CLIENT_KEY = process.env.REACT_APP_CLIENT_KEY;\n\nclass ImageFinderContainer extends Component {\n  state = {\n    images: [],\n    searchName: \"\",\n    currentPage: 1,\n    largeImageUrl: \"\",\n    tags: \"\",\n    loader: false,\n    error: false,\n    isOpen: false,\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchName, images } = this.state;\n    if (prevState.searchName !== searchName) {\n      this.getImages();\n    }\n\n    if (prevState.images === images) {\n      window.scrollTo({\n        top: document.documentElement.scrollHeight,\n        behavior: \"smooth\",\n      });\n    }\n  }\n\n  getImages = async (page = 1) => {\n    const { searchName, images } = this.state;\n    this.setState({ loader: true });\n    try {\n      const response = await axios.get(\n        `https://pixabay.com/api/?q=${searchName}&page=${page}&per_page=12&lang=ru&key=${CLIENT_KEY}`\n      );\n\n      this.setState({\n        images: [...images, ...response.data.hits],\n      });\n    } catch (error) {\n      console.log(\"ERROR GET\");\n    } finally {\n      this.setState({ loader: false });\n    }\n  };\n\n  openModal = (largeImageURL, tags) => {\n    this.setState({ tags: tags, largeImageUrl: largeImageURL, isOpen: true });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImageUrl: \"\", isOpen: false });\n  };\n\n  onSubmit = (name) => {\n    const { searchName } = this.state;\n    if (searchName === name) return;\n    this.setState({ searchName: name, images: [], currentPage: 1 });\n  };\n\n  loadMore = () => {\n    const newPage = this.state.currentPage + 1;\n    this.getImages(newPage);\n    this.setState({ currentPage: newPage });\n  };\n\n  render() {\n    const { images, isOpen, loader } = this.state;\n    return (\n      <>\n        <Searchbar onSubmit={this.onSubmit} />\n        {loader && <Loader />}\n        {!loader && images.length > 0 && (\n          <ImageGallery images={images} openModal={this.openModal} />\n        )}\n        {isOpen && (\n          <Modal\n            closeModal={this.closeModal}\n            largeImageUrl={this.state.largeImageUrl}\n            tags={this.state.tags}\n          />\n        )}\n        {!!images.length && !loader && <Button loadMore={this.loadMore} />}\n      </>\n    );\n  }\n}\nexport default ImageFinderContainer;\n","import React from \"react\";\nimport \"./App\";\nimport ImageFinderContainer from \"./Container/ImageFinderContainer/ImageFinderContainer\";\nfunction App() {\n  return (\n    <>\n      <ImageFinderContainer />\n    </>\n  );\n}\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}